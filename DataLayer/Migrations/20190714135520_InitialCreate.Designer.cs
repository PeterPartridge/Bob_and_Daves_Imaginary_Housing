// <auto-generated />
using System;
using API.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.DataLayer.Migrations
{
    [DbContext(typeof(BDIHousingContext))]
    [Migration("20190714135520_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.DataLayer.ConcreteClass.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LineFive");

                    b.Property<string>("LineFour");

                    b.Property<string>("LineOne");

                    b.Property<string>("LineThree");

                    b.Property<string>("LineTwo");

                    b.Property<Guid>("OwnerId");

                    b.Property<string>("PostCode");

                    b.Property<string>("PropertyNameOrNumber");

                    b.Property<bool>("isCurrentlyUsed");

                    b.HasKey("AddressId");

                    b.HasIndex("OwnerId");

                    b.ToTable("AddressDB");
                });

            modelBuilder.Entity("API.DataLayer.ConcreteClass.Property", b =>
                {
                    b.Property<Guid>("propertyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FreeHolder");

                    b.Property<string>("PropertyType");

                    b.HasKey("propertyId");

                    b.ToTable("PropertyDB");
                });

            modelBuilder.Entity("API.DataLayer.ConcreteClass.Address", b =>
                {
                    b.HasOne("API.DataLayer.ConcreteClass.Property")
                        .WithMany("address")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
